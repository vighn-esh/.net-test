name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Pull Docker image
        run: docker pull vighneshak/sonar-scanner-dotnet:latest

     

      - name: Run SonarQube scanner in Docker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          INPUT_SONARPROJECTKEY: ".net-test"  # Replace with your actual SonarQube project key
          INPUT_SONARPROJECTNAME: ".net-test"  # Replace with your actual SonarQube project name
          INPUT_DOTNETPREBUILDCMD: ""  # Any pre-build commands, if needed
          INPUT_DOTNETBUILDARGUMENTS: ""  # Any build arguments, if needed
          INPUT_DOTNETTESTARGUMENTS: ""  # Any test arguments, if needed
          INPUT_DOTNETDISABLETESTS: "false"  # Set to "true" if you want to disable tests
          INPUT_SONARBEGINARGUMENTS: ""  # Any additional arguments for the begin step
        run: |
          docker run --rm \
            -e SONAR_HOST_URL="${{ secrets.SONAR_HOST_URL }}" \
            -e SONAR_TOKEN="${{ secrets.SONAR_TOKEN }}" \
            -e INPUT_SONARPROJECTKEY="${{ env.INPUT_SONARPROJECTKEY }}" \
            -e INPUT_SONARPROJECTNAME="${{ env.INPUT_SONARPROJECTNAME }}" \
            -e INPUT_DOTNETPREBUILDCMD="${{ env.INPUT_DOTNETPREBUILDCMD }}" \
            -e INPUT_DOTNETBUILDARGUMENTS="${{ env.INPUT_DOTNETBUILDARGUMENTS }}" \
            -e INPUT_DOTNETTESTARGUMENTS="${{ env.INPUT_DOTNETTESTARGUMENTS }}" \
            -e INPUT_DOTNETDISABLETESTS="${{ env.INPUT_DOTNETDISABLETESTS }}" \
            -e INPUT_SONARBEGINARGUMENTS="${{ env.INPUT_SONARBEGINARGUMENTS }}" \
            -v "${{ github.workspace }}:/src" vighneshak/sonar-scanner-dotnet:latest \
            /entrypoint.sh
